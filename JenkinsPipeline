pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Build'
                sh 'mkdir -p build'
                sh 'cd build'
                sh 'cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install'
                sh 'make'
            }
        }
        stage('Test'){
            steps {
                // Add sauce credentials
                sauce('f0a6b8ad-ce30-4cba-bf9a-95afbc470a8a') {
                    // Start sauce connect
                    sauceconnect(options: '', useGeneratedTunnelIdentifier: false, verboseLogging: false) {
                        // List of browser configs we'll be testing against.
                        def platform_configs = [
                            'chrome',
                            'firefox',
                            'ie',
                            'edge'
                        ].join(',')

                        // Nightwatch.js supports color ouput, so wrap this step for ansi color
                        wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm']) {
                            // Run selenium tests using Nightwatch.js
                            // Ignore error codes. The junit publisher will cover setting build status.
                            sh "./node_modules/.bin/nightwatch -e ${platform_configs} || true"
                        }

                        echo 'Test'
                        sh 'mkdir -p reports'
                        sh 'output/debug/bin/osal.test --xmloutput reports/osal.test.xml'
                        step([$class: 'XUnitBuilder',
                            thresholds: [[$class: 'FailedThreshold', unstableThreshold: '1']],
                            tools: [[$class: 'JUnitType', pattern: 'reports/**']]])
                        step([$class: 'SauceOnDemandTestPublisher'])
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploy'
                sh 'mkdir -p /home/rene/jenkins-deploy/multi-platform'
                archiveArtifacts 'output/debug'
            }
        }
    }
}