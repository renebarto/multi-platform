project(unit-test-c++ CXX)

include(setup_target_properties_library)
include(show_target_properties)

message("\nunit-test-c++\n")

find_package(Threads REQUIRED)

set(COMPONENTS_UNITTESTCPP_DEFINITIONS 
    UNITTESTCPP_DYNAMIC)

set(COMPONENTS_UNITTESTCPP_INCLUDE
    ${PROJECT_SOURCE_DIR}/include
    ${PROJECT_SOURCE_DIR}/export)

set(UNITTESTCPP_DEPENDENCIES 
    osal)

set(COMPONENTS_UNITTESTCPP_LIBS 
    ${CMAKE_THREAD_LIBS_INIT}
    ${UNITTESTCPP_DEPENDENCIES})

file(GLOB_RECURSE COMPONENTS_UNITTEST_SOURCES src/*.cpp)
file(GLOB_RECURSE COMPONENTS_UNITTEST_INCLUDES_EXPORT export/*.h)
file(GLOB_RECURSE COMPONENTS_UNITTEST_INCLUDES include/*.h)

set(COMPONENTS_UNITTESTCPP_SOURCES
        ${COMPONENTS_UNITTEST_SOURCES}
        ${COMPONENTS_UNITTEST_INCLUDES_EXPORT}
        ${COMPONENTS_UNITTEST_INCLUDES})
 
MESSAGE(STATUS "CMAKE_CXX_FLAGS:                    " ${CMAKE_CXX_FLAGS})
MESSAGE(STATUS "CMAKE_CXX_FLAGS_DEBUG:              " ${CMAKE_CXX_FLAGS_DEBUG} )
MESSAGE(STATUS "CMAKE_CXX_FLAGS_RELEASE:            " ${CMAKE_CXX_FLAGS_RELEASE} )
MESSAGE(STATUS "CMAKE_CXX_FLAGS_MINSIZEREL:         " ${CMAKE_CXX_FLAGS_MINSIZEREL} )
MESSAGE(STATUS "CMAKE_CXX_FLAGS_RELWITHDEBINFO:     " ${CMAKE_CXX_FLAGS_RELWITHDEBINFO} )
list_to_string(COMPONENTS_UNITTESTCPP_INCLUDE STR)
MESSAGE(STATUS "Include files:                      " ${STR} )
list_to_string(COMPONENTS_UNITTESTCPP_SOURCES STR)
MESSAGE(STATUS "Source files:                       " ${STR} )
list_to_string(COMPONENTS_UNITTESTCPP_LIBS STR)
MESSAGE(STATUS "Link libraries:                     " ${STR} )

# add the library
add_library(${PROJECT_NAME} SHARED ${COMPONENTS_UNITTESTCPP_SOURCES})
target_link_libraries(${PROJECT_NAME} ${COMPONENTS_UNITTESTCPP_LIBS})
target_include_directories(${PROJECT_NAME} PUBLIC ${COMPONENTS_UNITTESTCPP_INCLUDE})
target_compile_definitions(${PROJECT_NAME} PRIVATE UNITTESTCPP_BUILD)
target_compile_definitions(${PROJECT_NAME} PUBLIC ${COMPONENTS_UNITTESTCPP_DEFINITIONS})
setup_target_properties_library(${PROJECT_NAME})

show_target_properties(${PROJECT_NAME})

install(TARGETS ${PROJECT_NAME} DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

